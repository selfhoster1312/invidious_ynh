on:
  push:
permissions:
  contents: write
jobs:
  common:
    runs-on: ubuntu-latest
    steps:
      - name: Download source
        uses: actions/checkout@v3
        with:
          repository: iv-org/invidious
      - name: Archive common assets
        run: tar -cJf invidious.common.tar.xz assets config locales
      - name: Save common assets
        uses: actions/upload-artifact@v3
        with:
          name: invidious.common.tar.xz
          path: invidious.common.tar.xz
  arm64:
    needs: [ "amd64" ]
    strategy:
      matrix:
        os: [ bullseye, bookworm ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Fetch cross-compiled object
        uses: actions/download-artifact@v3
        with:
          name: invidious.${{ matrix.os }}.arm64.o
      - name: Run setup
        uses: addnab/docker-run-action@v3
        with:
          image: 84codes/crystal:latest-debian-${{ matrix.os }}
          options: |
            --platform linux/arm64
            --volume ${{ github.workspace }}:/build
            --workdir /build
          run: |
            apt-get update
            apt-get install --yes --no-install-recommends libssl-dev libxml2-dev libyaml-dev libgmp-dev libevent-dev libpcre3-dev libreadline-dev libsqlite3-dev zlib1g-dev librsvg2-bin
            cc invidious.${{ matrix.os }}.arm64.o -o invidious  -rdynamic -L/usr/bin/../lib/crystal -lyaml  -lxml2  -lsqlite3  -lz `command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libssl || printf %s '-lssl -lcrypto'` `command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libcrypto || printf %s '-lcrypto'` -lpcre2-8 -lm -lgc -lpthread -levent  -lrt -lpthread -ldl
            mv invidious invidious.${{ matrix.os }}.arm64.bin
      - name: Save invidious.${{ matrix.os }}.arm64.bin
        uses: actions/upload-artifact@v3
        with:
          name: invidious.${{ matrix.os }}.arm64.bin
          path: invidious.${{ matrix.os }}.arm64.bin
  amd64:
    strategy:
      matrix:
        os: [ bullseye, bookworm ]
    runs-on: ubuntu-latest
    container:
      image: 84codes/crystal:latest-debian-${{ matrix.os }}
    steps:
      - name: Download source
        uses: actions/checkout@v3
        with:
          repository: iv-org/invidious
      - name: Update repos
        run: apt-get update
      - name: Install dependencies
        run: apt-get install --yes --no-install-recommends libssl-dev libxml2-dev libyaml-dev libgmp-dev libevent-dev libpcre3-dev libreadline-dev libsqlite3-dev zlib1g-dev librsvg2-bin
      - name: git workaround
        run: git config --global --add safe.directory $(pwd)
      - name: Build for amd64 for ${{ matrix.os }}
        run: make
      - name: Rename build
        run: mv invidious invidious.${{ matrix.os }}.amd64.bin
      - name: Save invidious.${{ matrix.os }}.amd64.bin
        uses: actions/upload-artifact@v3
        with:
          name: invidious.${{ matrix.os }}.amd64.bin
          path: invidious.${{ matrix.os }}.amd64.bin
      - name: Cross compile for arm64
        run: crystal build src/invidious.cr --progress --stats --error-trace --cross-compile --target "aarch64-linux-gnu"
      - name: Rename pre-linking object
        run: mv invidious.o invidious.${{ matrix.os }}.arm64.o
      - name: Save invidious
        uses: actions/upload-artifact@v3
        with:
          name: invidious.${{ matrix.os }}.arm64.o
          path: invidious.${{ matrix.os }}.arm64.o
          
  publish:
    needs: [ "common", "arm64", "amd64" ]
    runs-on: ubuntu-latest
    steps:
      - name: Calculate version
        run: echo "version=$(date +'%Y.%m.%d-%H%M')" >> "$GITHUB_ENV"
      - name: Download invidious common
        uses: actions/download-artifact@v3
        with:
          name: invidious.common.tar.xz
      - name: Download invidious arm64 bullseye
        uses: actions/download-artifact@v3
        with:
          name: invidious.bullseye.arm64.bin
      - name: Download invidious arm64 bookworm
        uses: actions/download-artifact@v3
        with:
          name: invidious.bookworm.arm64.bin
      - name: Download invidious amd64 bullseye
        uses: actions/download-artifact@v3
        with:
          name: invidious.bullseye.amd64.bin
      - name: Download invidious amd64 bookworm
        uses: actions/download-artifact@v3
        with:
          name: invidious.bookworm.amd64.bin
      - name: Unpack common assets
        run: tar xvf invidious.common.tar.xz
      - name: Generate packages
        run: |
          for arch in arm64 amd64; do
            for distro in bullseye bookworm; do
              ls
              DEBDIR=invidious_${distro}_${{ env.version }}_${arch}
              echo "Building inside $DEBDIR"
              mkdir $DEBDIR
              mkdir -p $DEBDIR/opt/invidious
              cp -R assets config locales $DEBDIR/opt/invidious
              mv invidious.$distro.$arch.bin $DEBDIR/opt/invidious/invidious
              chmod +x $DEBDIR/opt/invidious/invidious
              mkdir -p $DEBDIR/DEBIAN
              echo "Package: invidious" >> $DEBDIR/DEBIAN/control
              echo "Version: ${{ env.version }}" >> $DEBDIR/DEBIAN/control
              echo "Architecture: $arch" >> $DEBDIR/DEBIAN/control
              echo "Maintainer: selfhoster1312 <selfhoster1312@kl.netlib.re>" >> $DEBDIR/DEBIAN/control
              echo "Description: Invidious is a lightweight Youtube frontend." >> $DEBDIR/DEBIAN/control
              echo "Depends: libssl-dev, libxml2-dev, libyaml-dev, libgmp-dev, libevent-dev, libpcre3-dev, libreadline-dev, libsqlite3-dev, zlib1g-dev, postgresql, librsvg2-bin" >> $DEBDIR/DEBIAN/control
              dpkg --build $DEBDIR
            done
          done
      - name: Release packages
        uses: ncipollo/release-action@v1
        with:
          artifacts: "invidious_bullseye_${{ env.version }}_amd64.deb,invidious_bullseye_${{ env.version }}_arm64.deb,invidious_bookworm_${{ env.version }}_amd64.deb,invidious_bookworm_${{ env.version }}_arm64.deb"
          tag: "v${{ env.version }}"
