#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

key=$(ynh_string_random --length=24)
registration_enabled="true"
login_enabled="true"
captcha_enabled="true"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app=$app --key=key --value=$key
ynh_app_setting_set --app=$app --key=registration_enabled --value=$registration_enabled
ynh_app_setting_set --app=$app --key=login_enabled --value=$login_enabled
ynh_app_setting_set --app=$app --key=captcha_enabled --value=$captcha_enabled

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=15

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=4

mkdir -p "$install_dir"
chown -R $app:www-data "$install_dir"

ARCH="$(uname -m)"

pushd "$install_dir"
    case "$ARCH" in
        x86_64)
            echo "Setting up x86_64 (amd64) release"
            CHECKSUM="$CHECKSUM_X86_64"
            ;;
        aarch64)
            echo "Setting up aarch64 (arm64) release"
            CHECKSUM="$CHECKSUM_AARCH64"
            ;;
        armv6l)
            echo "Raspberry PI is not supported yet! (soon)"
            exit 1
            ;;
        *)
            echo "Unsupported architecture: $(uname -m)"
            exit 1
            ;;
    esac
    
    wget -q https://github.com/selfhoster1312/invidious-precompile/releases/download/$release/invidious.common.tar.xz
    if ! echo "$CHECKSUM_COMMON invidious.common.tar.xz" | sha256sum --check --status; then
        echo "WRONG CHECKSUM FOR invidious.common.tar.xz"
        exit 1
    fi

    wget -q https://github.com/selfhoster1312/invidious-precompile/releases/download/$release/invidious.$ARCH.tar.xz
    if ! echo "$CHECKSUM invidious.$ARCH.tar.xz" | sha256sum --check --status; then
        echo "WRONG CHECKSUM FOR invidious.$ARCH.tar.xz"
        exit 1
    fi       

    tar xvf invidious.$ARCH.tar.xz
    tar xvf invidious.common.tar.xz
    chmod +x invidious
popd

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="Modifying a config file..." --weight=1

ynh_add_config --template="../conf/config.yml" --destination="$install_dir/config/config.yml"

chmod 600 "$install_dir/config/config.yml"
chown $app:$app "$install_dir/config/config.yml"

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL INVIDIOUS
#=================================================
ynh_script_progression --message="Building Invidious.. (this will take some time and resources!)" --weight=60

pushd "$install_dir"
	./invidious --migrate
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app ..." --weight=10

# Create a dedicated NGINX config
ynh_add_nginx_config

ynh_add_config --template="../conf/cron_invidious" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"

ynh_use_logrotate

ynh_add_systemd_config

yunohost service add $app --description="Invidious is an alternative front-end to YouTube" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=2

# Start a systemd service
ynh_systemd_action --service_name=$app --action=start --log_path=systemd

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of Invidious completed" --last
